openapi: '3.1.0'
info:
  description: "JSONPlaceholder"
  version: "1.0.0"
  title: "JSONPlaceholder"
host: "jsonplaceholder.typicode.com"
basePath: "/"
tags:
- name: "post"
  description: "Everything about posts"
paths:
  /posts:
    get:
      tags:
      - "post"
      operationId: "getPosts"
      responses:
        "200":
          description: "successful operation"
          content:
            'application/json':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Post"
    post:
      tags:
      - "post"
      operationId: "addPost"
      parameters:
      - in: "body"
        name: "body"
        description: "Post object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/components/schemas/Post"
      responses:
        "201":
          description: "successful operation"
  /posts/{postId}:
    get:
      tags:
      - "post"
      operationId: "getPostById"
      parameters:
      - name: "postId"
        in: "path"
        description: "ID of post to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Post"
    put:
      tags:
      - "post"
      operationId: "updatePost"
      parameters:
      - name: "postId"
        in: "path"
        description: "ID of post to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Post object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/components/schemas/Post"
      responses:
        "200":
          description: "successful operation"
  /post/{postId}/comments:
    get:
      tags:
      - "post"
      operationId: "getCommentsByPost"
      parameters:
      - name: "postId"
        in: "path"
        description: "ID of post "
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          content:
            'application/json':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Comment"
  /users/{userId}:
    get:
      tags:
      - "post"
      operationId: "getUserById"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/User"

components:
  schemas:
    Post:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        userId:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        body:
          type: "string"
      required:
        - id
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        userId:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        username:
          type: "string"
        email:
          type: "string"
        address:
          type: "object"
          properties:
            street:
              type: "string"
            suite:
              type: "string"
            city:
              type: "string"
            zipcode:
              type: "string"
            geo:
              type: "object"
              properties:
                lat:
                  type: "string"
                lng:
                  type: "string"
        phone:
          type: "string"
        website:
          type: "string"
        company:
          type: "object"
          properties:
            name:
              type: "string"
            catchPhrase:
              type: "string"
            bs:
              type: "string"
      required:
        - id
    Comment:
      type: "object"
      properties:
        postId:
          type: "string"
        id:
          type: "string"
        name:
          type: "string"
        email:
          type: "string"
        body:
          type: "string"
      required:
        - id
